--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: "Copies recursively the files from source directory to root directory. If any of the files finishes with .tt, it's considered to be a template and is placed in the destination without the extension .tt. If any empty directory is found, it's copied and all .empty_directory files are ignored. If any file name is wrapped within % signs, the text within the % signs will be executed as a method and replaced with the returned value. Let's suppose a doc directory with the following files:"
- !ruby/struct:SM::Flow::VERB 
  body: "  doc/\n    components/.empty_directory\n    README\n    rdoc.rb.tt\n    %app_name%.rb\n"
- !ruby/struct:SM::Flow::P 
  body: "When invoked as:"
- !ruby/struct:SM::Flow::VERB 
  body: "  directory &quot;doc&quot;\n"
- !ruby/struct:SM::Flow::P 
  body: "It will create a doc directory in the destination with the following files (assuming that the `app_name` method returns the value &quot;blog&quot;):"
- !ruby/struct:SM::Flow::VERB 
  body: "  doc/\n    components/\n    README\n    rdoc.rb\n    blog.rb\n"
- !ruby/struct:SM::Flow::P 
  body: "<b>Encoded path note:</b> Since Bundler::Thor internals use Object#respond_to? to check if it can expand %something%, this `something` should be a public method in the class calling #directory. If a method is private, Bundler::Thor stack raises PrivateMethodEncodedError."
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Parameters
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "source<String>:"
    body: the relative path to the source root.
  - !ruby/struct:SM::Flow::LI 
    label: "destination<String>:"
    body: the relative path to the destination root.
  - !ruby/struct:SM::Flow::LI 
    label: "config<Hash>:"
    body: give :verbose =&gt; false to not log the status. If :recursive =&gt; false, does not look for paths recursively. If :mode =&gt; :preserve, preserve the file mode from the source. If :exclude_pattern =&gt; /regexp/, prevents copying files that match that regexp.
  type: :NOTE
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Examples
- !ruby/struct:SM::Flow::VERB 
  body: "  directory &quot;doc&quot;\n  directory &quot;doc&quot;, &quot;docs&quot;, :recursive =&gt; false\n"
full_name: Bundler::Thor::Actions#directory
is_singleton: false
name: directory
params: (source, *args, &block)
visibility: public
